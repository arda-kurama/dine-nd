name: DineND Daily Update + Embed
on:
    schedule:
        - cron: "0 11 * * *" # Daily at 7 AM EDT
    workflow_dispatch:

jobs:
    scrape-embed-push:
        runs-on: ubuntu-latest
        steps:
            # 1) Checkout code
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            # 2) Python setup + pip cache
            - uses: actions/setup-python@v4
              with:
                  python-version: "3.12"
                  cache: pip
                  cache-dependency-path: requirements.txt

            # 3) Install Chrome (deb) + matching Chromedriver
            - name: Install Chrome & matching Chromedriver
              run: |
                  set -eux

                  # 1) Add Google’s repo
                  wget -qO- https://dl.google.com/linux/linux_signing_key.pub \
                      | sudo gpg --dearmor -o /usr/share/keyrings/google-linux-signing-keyring.gpg
                  echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-linux-signing-keyring.gpg] \
                      http://dl.google.com/linux/chrome/deb/ stable main" \
                      | sudo tee /etc/apt/sources.list.d/google-chrome.list

                  # 2) Install Chrome + deps (incl. unzip for driver)
                  sudo apt-get update
                  sudo apt-get install -y \
                      google-chrome-stable xvfb libnss3 libxi6 libgtk-3-0 libxss1 unzip

                  # 3) Derive the base version and fetch the correct driver
                  CHROME_VER=$(google-chrome --product-version)
                  BASE_VER=${CHROME_VER%.*}           # “138.0.7204”
                  DRIVER_VER=$(wget -qO- \
                      "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${BASE_VER}")
                  echo "→ Chrome $CHROME_VER → Driver $DRIVER_VER"

                  wget -q --show-progress \
                      "https://chromedriver.storage.googleapis.com/${DRIVER_VER}/chromedriver_linux64.zip"
                  unzip -qq chromedriver_linux64.zip
                  sudo mv chromedriver /usr/local/bin/
                  sudo chmod +x /usr/local/bin/chromedriver

                  # 4) Smoke‑test
                  google-chrome --headless --no-sandbox --disable-gpu --version
                  chromedriver --version

            # 4) Python deps
            - name: Install Python dependencies
              run: |
                  pip install --upgrade pip
                  pip install -r requirements.txt

            # 5) Run your scraper & stash JSON
            - name: Scrape & Save JSON
              run: |
                  xvfb-run -s "-screen 0 1920x1080x24" python -m backend.main
                  mkdir -p /tmp/menu_json
                  mv menu_summary.json     /tmp/menu_json/
                  mv consolidated_menu.json /tmp/menu_json/

            # 6) Checkout backend-deployment branch
            - name: Checkout backend-deployment
              uses: actions/checkout@v3
              with:
                  ref: backend-deployment
                  fetch-depth: 0
                  persist-credentials: true

            # 7) Copy & commit if changed
            - name: Commit & Push JSON if changed
              run: |
                  cp /tmp/menu_json/*.json .
                  git add *.json
                  if ! git diff --cached --quiet; then
                    git config user.name  "github-actions[bot]"
                    git config user.email "github-actions[bot]@users.noreply.github.com"
                    git commit -m "ci: daily menu update $(date -u +'%Y-%m-%d')"
                    git push origin backend-deployment
                  else
                    echo "No JSON changes—skipping commit."
                  fi

            # 8) Embed & upsert
            - name: Embed & Upsert to Pinecone
              env:
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                  PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
                  PINECONE_ENV: ${{ secrets.PINECONE_ENV }}
              run: python plate_planner/embed_menu.py consolidated_menu.json
